getwd()
knitr::include_graphics("resources/00-index/diminishing_utility.jpg")
knitr::include_graphics("resources/00-index/technological-eras.png")
knitr::include_graphics("../resources/00-index/diminishing_utility.jpg")
knitr::include_graphics("../resources/00-index/technological-eras.png")
knitr::include_graphics("resources/02-index/bus.jpg")
data(iris)
iris
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Petal.Width, iris$Sepal.Width)
library(ggplot2)
ggplot(iris, aes(x = Petal.Width, y = Sepal.Width)) + geom_point()
ggplot(iris, aes(x = Petal.Width, y = Sepal.Width)) + geom_point()
data(iris)
head(iris)
library(ggplot2)
ggplot(iris, aes(x = Petal.Width, y = Sepal.Width, col = Species)) + geom_point()
ggplot(iris, aes(x = Petal.Width, y = Sepal.Width, col = Species)) + geom_point()
knitr::include_graphics("resources/02-observer/machine-learning.png")
library(ggplot2)
train = data.frame(living_area = c(20, 32, 40),
price_sold = c(20000, 31000, 42500))
ggplot(train, aes(x = living_area, y = price_sold)) + geom_point()
ggplot(train, aes(x = living_area, y = price_sold)) + geom_point()
library(ggplot2)
train = data.frame(living_area = c(20, 32, 40, 53, 55, 58, 60, 75, 77, 79, 88),
price_sold = c(20000, 31000, 42500, 58000, 54300, 56700, 68000, 72300, 75000, 75500, 79000))
head(train)
ggplot(train, aes(x = living_area, y = price_sold)) + geom_point()
ggplot(train, aes(x = living_area, y = price_sold)) + geom_point() + labs(x = "Living are in square meters", y = "Price of house sold in Euro")
library(ggplot2)
train = data.frame(living_area = c(20, 32, 35, 40, 53, 55, 58, 60, 75, 77, 79, 88, 100, 105, 112, 118),
price_sold = c(20000, 31000, 32000, 42500, 58000, 54300, 56700, 68000, 72300, 75000, 75500, 79000, 82000, 81000, 83000, 86000))
head(train)
ggplot(train, aes(x = living_area, y = price_sold)) + geom_point() + labs(x = "Living are in square meters", y = "Price of house sold in Euro")
library(ggplot2)
train = data.frame(living_area = c(30, 32, 35, 40, 53, 55, 58, 60, 75, 77, 79, 88, 100, 105, 112, 118),
price_sold = c(20000, 31000, 32000, 42500, 58000, 54300, 56700, 68000, 72300, 75000, 75500, 79000, 82000, 81000, 83000, 82000))
head(train)
ggplot(train, aes(x = living_area, y = price_sold)) + geom_point() + labs(x = "Living are in square meters", y = "Price of house sold in Euro")
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
geom_segment(aes(xend = 100 + 10,
yend = 80000 + 1000))
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
geom_segment(aes(xend = 100 + 10,
yend = 80000 + 1000))
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
geom_segment(aes(xend = 100 + 10,
yend = 80000 + 1000))
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
geom_smooth(method='lm', formula= price_sold~living_area)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
geom_smooth(method='lm', formula= price_sold~living_area)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
geom_smooth(method='lm', formula= price_sold~living_area)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
geom_smooth(method='lm', formula= price_sold~living_area, data = train)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
geom_smooth(method='lm', formula= price_sold~living_area, data = train)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
geom_smooth(method='lm', formula= train$price_sold~train$living_area)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula= price_sold~living_area)
train
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm')
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm')
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', span = 0.0)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', span = 0.1)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
scale_y_continuous(limits=c(0,100000)) +
scale_x_continuous(limits=c(0,140)) +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
scale_y_continuous(limits=c(0,100000)) +
scale_x_continuous(limits=c(0,140)) +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
library(ggplot2)
train = data.frame(living_area = c(30, 32,33, 35, 36, 40, 53, 55, 58, 60, 75, 77, 79, 88, 100, 105, 112, 118),
price_sold = c(20000, 31000,32000,32000, 32000, 42500, 58000, 54300, 56700, 68000, 72300, 75000, 75500, 79000, 82000, 81000, 83000, 82000))
head(train)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro")
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
library(ggplot2)
train = data.frame(living_area = c(30, 32,32, 33, 35, 36, 40, 53, 55, 58, 60, 75, 77, 79, 100, 105, 112, 118),
price_sold = c(20000,25000, 31000,32000,32000, 32000, 42500, 58000, 54300, 56700, 68000, 72300, 75000, 75500,  82000, 81000, 83000, 82000))
head(train)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro")
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
library(ggplot2)
train = data.frame(living_area = c(30, 32, 32.5, 33, 35, 36, 40, 53, 55, 58, 60, 75, 77, 79, 100, 105, 112, 118),
price_sold = c(20000,25000, 31000,32000,32000, 32000, 42500, 58000, 54300, 56700, 68000, 72300, 75000, 75500,  82000, 81000, 83000, 82000))
head(train)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro")
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point(color = "grey") +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point(color = "white") +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE) +
geom_point(aes(x=80, y=70000), colour="blue")
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point(color = "white") +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE) +
geom_point(aes(x=80, y=67000), colour="red")
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point(color = "white") +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE) +
geom_point(aes(x=80, y=68000), colour="red")
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point(color = "white") +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE) +
geom_point(aes(x=80, y=67500), colour="red")
train = data.frame(living_area = c(30, 32, 32.5, 33, 35, 36, 40, 53, 55, 58, 60, 75, 77, 79, 100, 105, 112, 118),
price_sold = c(20000,25000, 31000,32000,32000, 32000, 42500, 58000, 54300, 56700, 68000, 72300, 75000, 75500,  82000, 81000, 83000, 82000))
head(train)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro")
library(ggplot2)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro")
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point() +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
ggplot(train, aes(x = living_area, y = price_sold)) +
geom_point(color = "white") +
labs(x = "Living are in square meters", y = "Price of house sold in Euro") +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', se = FALSE)
# Let's sum together all single errors which we did (gotten rid of negative signs).
sum_of_errors = 13500 + 7500 + 5000 + 850 + 12000 + 3500
#Now we calculate mean (average) error by simply dividing by total number of houses which we are evaluating.
mean_error = sum_of_errors / 6
print(mean_error)
knitr::include_graphics("resources/02-observer/all-errors.jpg")
library(ggplot2)
loafs_weights_grams <- c(500, 500, 400, 1000, 500, 250, 500, 250)
# Create the function.
getMode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getMode(loafs_weights_grams)
summer_temperatures_celsius <- c(35, 35, 32, 28, 31, 25, 26, 27, 24)
sort(summer_temperatures_celsius)
median(summer_temperatures_celsius)
salaries_country <- c(350, 400, 450, 470, 500, 520, 1200, 1270, 1300, 1460, 1500)
median(salaries_country)
350 + 400 + 450 + 470 + 500 + 520 + 1200 + 1270 + 1300 + 1460 + 1500
9420 / 11
mean(salaries_country)
plot(runif(100))
barplot(runif(100))
ggplot(distribution_to_plot) + geom_bar()
library(ggplot2)
ggplot(distribution_to_plot) + geom_bar()
distribution_to_plot <- runif(100)
ggplot(distribution_to_plot) + geom_bar()
library(ggplot2)
distribution_to_plot <- data.frame(points_x = runif(100))
ggplot(distribution_to_plot, aes(x = points_x)) + geom_bar()
ggplot(distribution_to_plot, aes(x = points_x)) + geom_histogram()
ggplot(distribution_to_plot, aes(x = points_x)) + geom_histogram(bins = 100)
distribution_to_plot <- data.frame(points_x = runif(1000))
ggplot(distribution_to_plot, aes(x = points_x)) + geom_histogram(bins = 100)
distribution_to_plot <- data.frame(points_x = rnorm(1000))
ggplot(distribution_to_plot, aes(x = points_x)) + geom_histogram(bins = 100)
distribution_to_plot <- data.frame(points_x = rnorm(1000, mean = 80, sd = 10))
ggplot(distribution_to_plot, aes(x = points_x)) + geom_histogram(bins = 100)
library(ggplot2)
distribution_to_plot <- data.frame(points_x = rnorm(1000, mean = 90, sd = 8))
ggplot(distribution_to_plot, aes(x = points_x)) + geom_histogram(bins = 100)
df.example <- data.frame(model = rep(c("a", "b"), length.out = 500),
type = rep(c("t1", "t2", "t2", "t1"),
length.outh = 250), value = rnorm(1000))
library (dplyr)
d2 <- df.example %>%
group_by(model, type) %>%
summarize(lower = quantile(value, probs = .025),
upper = quantile(value, probs = .975))
ggplot(df.example, aes(x = value)) +
facet_grid(type ~ model) +
geom_density(aes(fill = model, colour = model)) +
geom_vline(data = d2, aes(xintercept = lower)) +
geom_vline(data = d2, aes(xintercept = upper))
df.example <- data.frame(model = rep(c("a", "b"), length.out = 500),
type = rep(c("t1", "t2", "t2", "t1"),
length.outh = 250), value = rnorm(1000))
library (dplyr)
d2 <- df.example %>%
group_by(model, type) %>%
summarize(lower = quantile(value, probs = .025),
upper = quantile(value, probs = .975))
ggplot(df.example, aes(x = value)) +
facet_grid(type ~ model) +
geom_histogram(aes(fill = model, colour = model)) +
geom_vline(data = d2, aes(xintercept = lower)) +
geom_vline(data = d2, aes(xintercept = upper))
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
sample(seq(400, 1300, 10), 50)
sample(seq(400, 1300, 10), 100)
sample(seq(400, 1300, 10), 100))
round(rnorm(100, mean = 800, sd = 150))
large_salaries_population <- c(round(rnorm(30, mean = 600, sd = 80)), round(rnorm(70, mean = 1000, sd = 150)))
large_salaries_population <- c(round(rnorm(30, mean = 600, sd = 80)), round(rnorm(70, mean = 1000, sd = 150)))
large_salaries_population
large_salaries_population_df <- data.frame(salaries = large_salaries_population)
ggplot(large_salaries_population_df, aes(x = salaries)) + geom_histogram()
large_salaries_population_df <- data.frame(salaries = large_salaries_population)
ggplot(large_salaries_population_df, aes(x = salaries)) + geom_histogram(bins = 100)
large_salaries_population <- c(round(rnorm(300, mean = 600, sd = 80)), round(rnorm(700, mean = 1000, sd = 150)))
large_salaries_population_df <- data.frame(salaries = large_salaries_population)
ggplot(large_salaries_population_df, aes(x = salaries)) + geom_histogram(bins = 100)
large_salaries_population <- c(round(rnorm(700, mean = 600, sd = 80)), round(rnorm(300, mean = 1000, sd = 150)))
large_salaries_population_df <- data.frame(salaries = large_salaries_population)
ggplot(large_salaries_population_df, aes(x = salaries)) + geom_histogram(bins = 100)
knitr::include_graphics("resources/01-being-aware/data-mining-Venn-diagram.png")
knitr::include_graphics("resources/01-being-aware/data-mining-Venn-diagram.png")
knitr::include_graphics("resources/01-being-aware/data-mining-data-science.jpg")
knitr::include_graphics("resources/01-being-aware/pepper-robot.jpg")
stable_climate <- c(10, 11, 12, 13, 14, 15, 16)
unstable_climate <- c(4,10, 12, 20)
mean(stable_climate)
mean(unstable_climate)
stable_climate <- c(10, 11, 13, 14, 15, 16)
unstable_climate <- c(4,10, 12, 20)
mean(stable_climate)
mean(unstable_climate)
mean(stable_climate)
mean(unstable_climate)
stable_climate <- c(10, 11, 13, 14, 15, 16)
unstable_climate <- c(4,10, 14, 20)
mean(stable_climate)
mean(unstable_climate)
stable_climate <- c(10, 11, 11, 13, 14, 15, 16)
unstable_climate <- c(4,10, 14, 20)
mean(stable_climate)
mean(unstable_climate)
stable_climate <- c(11, 12, 13, 14, 15, 16)
unstable_climate <- c(4,10, 14, 20)
mean(stable_climate)
mean(unstable_climate)
stable_climate <- c(11, 12, 13, 14, 15, 16)
unstable_climate <- c(4,10, 14,16, 20)
mean(stable_climate)
mean(unstable_climate)
stable_climate <- c(11, 12, 13, 14, 15, 16)
unstable_climate <- c(4,10, 14,18, 20)
mean(stable_climate)
mean(unstable_climate)
knitr::include_graphics("resources/02-observer/boxplot-1.jpg")
knitr::include_graphics("resources/02-observer/boxplot-2.jpg")
knitr::include_graphics("resources/02-observer/boxplot-3.jpg")
knitr::include_graphics("resources/02-observer/boxplot-4.jpg")
knitr::include_graphics("resources/02-observer/boxplot-5.jpg")
